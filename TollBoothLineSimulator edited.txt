import java.io.*;
import java.util.Scanner;
import java.util.StringTokenizer;

public class ToolboothLineSimulatorE
{
	 public static int arrivalTime;
	 public static String vehicleType;
	 public static int delayTime; 
	 public static int timer;
	 public static TollBoothLine ManualLines;
	 public static TollBoothLine AutomaticLines;
	
	 public static void main(String[] args) throws IOException 
	{
		 Scanner sc = new Scanner(System.in);
			System.out.print("Input File: ");
			File inputFile =  new File(sc.nextLine());
			Scanner scan = new Scanner(inputFile);
			System.out.print("Manual Toll Booths: ");
			int manualTB = sc.nextInt();
			System.out.print("Automatic Toll Booths: ");
			int automaticTB = sc.nextInt();
			
			 ManualLines = new TollBoothLine(manualTB);
			 AutomaticLines = new TollBoothLine(automaticTB);
			 timer =1;
			 while (scan.hasNextLine())
			 {
				 StringTokenizer stringTokenizer = new StringTokenizer(scan.nextLine(), ",");
				 arrivalTime = Integer.parseInt(stringTokenizer.nextToken());
				 if (timer == arrivalTime)
				 {
					 vehicleType = stringTokenizer.nextElement().toString();
					 if  (vehicleType.equals("M"))
					 {
						 delayTime = Integer.parseInt(stringTokenizer.nextElement().toString());
						 Vehicle v= new Vehicle (arrivalTime, vehicleType, delayTime);
						 ManualLines.insert(v);
//						 System.out.println(v);
					 }
					 else if (vehicleType.equals("A"))
					 {
						 delayTime = 1;
						 Vehicle v= new Vehicle (arrivalTime, vehicleType, delayTime);
						 AutomaticLines.insert(v);
//						 System.out.println(v);
					 }
						
				 }
				 else if (timer< arrivalTime)
				 {
					 while(timer!= arrivalTime)
						{
						 	for (int i=0; i<manualTB; i++)
						 	{
						 		for (int j=0; j< ManualLines.getNumItems(i); j++)
						 		{
						 			if (ManualLines.getNumItems(i)!= 0)
						 			{
						 				Vehicle v= ManualLines.getVehicleInALine(i,j);
						 				int deleteTime = timer + v.getArrivalTime();
						 				if (deleteTime == (timer+1)) ManualLines.moveUp(i);	
						 			}
						 		}
						 	}
						 	for (int i=0; i<automaticTB; i++)
						 	{
						 		for (int j=0; j< AutomaticLines.getNumItems(i); j++)
						 		{
						 			if (AutomaticLines.getNumItems(i) != 0)
						 			{	
						 				Vehicle v= AutomaticLines.getVehicleInALine(i,j);
						 				int deleteTime = timer + v.getArrivalTime();
						 				if (deleteTime == (timer+1)) AutomaticLines.moveUp(i);	
						 			}
						 		}
						 	}
						 	timer++;						 	
						}
				 }
			
			 }
			 
			 for (int k=0; k<manualTB; k++ )
				{
					System.out.println("Manual Line " + k + " Maximum Length= " + ManualLines.getMaxLength(k));
					
				}
				for (int k=0; k<automaticTB; k++ )
				{
					System.out.println("Automatic Line " + k + " Maximum Length= " + AutomaticLines.getMaxLength(k));
					
				}
	
	
	}
}
